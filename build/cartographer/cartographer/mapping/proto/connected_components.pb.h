// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cartographer/mapping/proto/connected_components.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto;
namespace cartographer {
namespace mapping {
namespace proto {
class ConnectedComponents;
struct ConnectedComponentsDefaultTypeInternal;
extern ConnectedComponentsDefaultTypeInternal _ConnectedComponents_default_instance_;
class ConnectedComponents_ConnectedComponent;
struct ConnectedComponents_ConnectedComponentDefaultTypeInternal;
extern ConnectedComponents_ConnectedComponentDefaultTypeInternal _ConnectedComponents_ConnectedComponent_default_instance_;
}  // namespace proto
}  // namespace mapping
}  // namespace cartographer
PROTOBUF_NAMESPACE_OPEN
template<> ::cartographer::mapping::proto::ConnectedComponents* Arena::CreateMaybeMessage<::cartographer::mapping::proto::ConnectedComponents>(Arena*);
template<> ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent* Arena::CreateMaybeMessage<::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace cartographer {
namespace mapping {
namespace proto {

// ===================================================================

class ConnectedComponents_ConnectedComponent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent) */ {
 public:
  inline ConnectedComponents_ConnectedComponent() : ConnectedComponents_ConnectedComponent(nullptr) {}
  ~ConnectedComponents_ConnectedComponent() override;
  explicit PROTOBUF_CONSTEXPR ConnectedComponents_ConnectedComponent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ConnectedComponents_ConnectedComponent(const ConnectedComponents_ConnectedComponent& from);
  ConnectedComponents_ConnectedComponent(ConnectedComponents_ConnectedComponent&& from) noexcept
    : ConnectedComponents_ConnectedComponent() {
    *this = ::std::move(from);
  }

  inline ConnectedComponents_ConnectedComponent& operator=(const ConnectedComponents_ConnectedComponent& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConnectedComponents_ConnectedComponent& operator=(ConnectedComponents_ConnectedComponent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConnectedComponents_ConnectedComponent& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConnectedComponents_ConnectedComponent* internal_default_instance() {
    return reinterpret_cast<const ConnectedComponents_ConnectedComponent*>(
               &_ConnectedComponents_ConnectedComponent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ConnectedComponents_ConnectedComponent& a, ConnectedComponents_ConnectedComponent& b) {
    a.Swap(&b);
  }
  inline void Swap(ConnectedComponents_ConnectedComponent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConnectedComponents_ConnectedComponent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConnectedComponents_ConnectedComponent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ConnectedComponents_ConnectedComponent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ConnectedComponents_ConnectedComponent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ConnectedComponents_ConnectedComponent& from) {
    ConnectedComponents_ConnectedComponent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConnectedComponents_ConnectedComponent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "cartographer.mapping.proto.ConnectedComponents.ConnectedComponent";
  }
  protected:
  explicit ConnectedComponents_ConnectedComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrajectoryIdFieldNumber = 1,
  };
  // repeated int32 trajectory_id = 1;
  int trajectory_id_size() const;
  private:
  int _internal_trajectory_id_size() const;
  public:
  void clear_trajectory_id();
  private:
  int32_t _internal_trajectory_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_trajectory_id() const;
  void _internal_add_trajectory_id(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_trajectory_id();
  public:
  int32_t trajectory_id(int index) const;
  void set_trajectory_id(int index, int32_t value);
  void add_trajectory_id(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      trajectory_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_trajectory_id();

  // @@protoc_insertion_point(class_scope:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > trajectory_id_;
    mutable std::atomic<int> _trajectory_id_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto;
};
// -------------------------------------------------------------------

class ConnectedComponents final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cartographer.mapping.proto.ConnectedComponents) */ {
 public:
  inline ConnectedComponents() : ConnectedComponents(nullptr) {}
  ~ConnectedComponents() override;
  explicit PROTOBUF_CONSTEXPR ConnectedComponents(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ConnectedComponents(const ConnectedComponents& from);
  ConnectedComponents(ConnectedComponents&& from) noexcept
    : ConnectedComponents() {
    *this = ::std::move(from);
  }

  inline ConnectedComponents& operator=(const ConnectedComponents& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConnectedComponents& operator=(ConnectedComponents&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConnectedComponents& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConnectedComponents* internal_default_instance() {
    return reinterpret_cast<const ConnectedComponents*>(
               &_ConnectedComponents_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ConnectedComponents& a, ConnectedComponents& b) {
    a.Swap(&b);
  }
  inline void Swap(ConnectedComponents* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConnectedComponents* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConnectedComponents* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ConnectedComponents>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ConnectedComponents& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ConnectedComponents& from) {
    ConnectedComponents::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConnectedComponents* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "cartographer.mapping.proto.ConnectedComponents";
  }
  protected:
  explicit ConnectedComponents(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConnectedComponents_ConnectedComponent ConnectedComponent;

  // accessors -------------------------------------------------------

  enum : int {
    kConnectedComponentFieldNumber = 1,
  };
  // repeated .cartographer.mapping.proto.ConnectedComponents.ConnectedComponent connected_component = 1;
  int connected_component_size() const;
  private:
  int _internal_connected_component_size() const;
  public:
  void clear_connected_component();
  ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent* mutable_connected_component(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent >*
      mutable_connected_component();
  private:
  const ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent& _internal_connected_component(int index) const;
  ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent* _internal_add_connected_component();
  public:
  const ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent& connected_component(int index) const;
  ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent* add_connected_component();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent >&
      connected_component() const;

  // @@protoc_insertion_point(class_scope:cartographer.mapping.proto.ConnectedComponents)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent > connected_component_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConnectedComponents_ConnectedComponent

// repeated int32 trajectory_id = 1;
inline int ConnectedComponents_ConnectedComponent::_internal_trajectory_id_size() const {
  return _impl_.trajectory_id_.size();
}
inline int ConnectedComponents_ConnectedComponent::trajectory_id_size() const {
  return _internal_trajectory_id_size();
}
inline void ConnectedComponents_ConnectedComponent::clear_trajectory_id() {
  _impl_.trajectory_id_.Clear();
}
inline int32_t ConnectedComponents_ConnectedComponent::_internal_trajectory_id(int index) const {
  return _impl_.trajectory_id_.Get(index);
}
inline int32_t ConnectedComponents_ConnectedComponent::trajectory_id(int index) const {
  // @@protoc_insertion_point(field_get:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent.trajectory_id)
  return _internal_trajectory_id(index);
}
inline void ConnectedComponents_ConnectedComponent::set_trajectory_id(int index, int32_t value) {
  _impl_.trajectory_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent.trajectory_id)
}
inline void ConnectedComponents_ConnectedComponent::_internal_add_trajectory_id(int32_t value) {
  _impl_.trajectory_id_.Add(value);
}
inline void ConnectedComponents_ConnectedComponent::add_trajectory_id(int32_t value) {
  _internal_add_trajectory_id(value);
  // @@protoc_insertion_point(field_add:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent.trajectory_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
ConnectedComponents_ConnectedComponent::_internal_trajectory_id() const {
  return _impl_.trajectory_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
ConnectedComponents_ConnectedComponent::trajectory_id() const {
  // @@protoc_insertion_point(field_list:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent.trajectory_id)
  return _internal_trajectory_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
ConnectedComponents_ConnectedComponent::_internal_mutable_trajectory_id() {
  return &_impl_.trajectory_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
ConnectedComponents_ConnectedComponent::mutable_trajectory_id() {
  // @@protoc_insertion_point(field_mutable_list:cartographer.mapping.proto.ConnectedComponents.ConnectedComponent.trajectory_id)
  return _internal_mutable_trajectory_id();
}

// -------------------------------------------------------------------

// ConnectedComponents

// repeated .cartographer.mapping.proto.ConnectedComponents.ConnectedComponent connected_component = 1;
inline int ConnectedComponents::_internal_connected_component_size() const {
  return _impl_.connected_component_.size();
}
inline int ConnectedComponents::connected_component_size() const {
  return _internal_connected_component_size();
}
inline void ConnectedComponents::clear_connected_component() {
  _impl_.connected_component_.Clear();
}
inline ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent* ConnectedComponents::mutable_connected_component(int index) {
  // @@protoc_insertion_point(field_mutable:cartographer.mapping.proto.ConnectedComponents.connected_component)
  return _impl_.connected_component_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent >*
ConnectedComponents::mutable_connected_component() {
  // @@protoc_insertion_point(field_mutable_list:cartographer.mapping.proto.ConnectedComponents.connected_component)
  return &_impl_.connected_component_;
}
inline const ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent& ConnectedComponents::_internal_connected_component(int index) const {
  return _impl_.connected_component_.Get(index);
}
inline const ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent& ConnectedComponents::connected_component(int index) const {
  // @@protoc_insertion_point(field_get:cartographer.mapping.proto.ConnectedComponents.connected_component)
  return _internal_connected_component(index);
}
inline ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent* ConnectedComponents::_internal_add_connected_component() {
  return _impl_.connected_component_.Add();
}
inline ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent* ConnectedComponents::add_connected_component() {
  ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent* _add = _internal_add_connected_component();
  // @@protoc_insertion_point(field_add:cartographer.mapping.proto.ConnectedComponents.connected_component)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::cartographer::mapping::proto::ConnectedComponents_ConnectedComponent >&
ConnectedComponents::connected_component() const {
  // @@protoc_insertion_point(field_list:cartographer.mapping.proto.ConnectedComponents.connected_component)
  return _impl_.connected_component_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace mapping
}  // namespace cartographer

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_cartographer_2fmapping_2fproto_2fconnected_5fcomponents_2eproto
